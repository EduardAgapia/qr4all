import 'dart:async';
import 'dart:collection';
import 'dart:convert';
import 'dart:math';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:qr_4_all/domain/gal/gal.dart';
import 'package:qr_4_all/domain/gals.dart';
import 'package:geolocator/geolocator.dart';
import 'package:qr_4_all/views/turistic-areas/views/objectives/objectives_screen.dart';
import 'package:qr_4_all/views/turistic-areas/views/zones/zone.dart';
import 'package:qr_4_all/views/turistic-areas/views/zones/zone_turistice.dart';

import '../scanner.dart';
import '../user_location.dart';

class MenuScreen extends StatefulWidget {
  final bool isRo;

  const MenuScreen({Key? key, required this.isRo}) : super(key: key);

  @override
  _MenuScreenState createState() => _MenuScreenState(isRo: isRo);
}

class _MenuScreenState extends State<MenuScreen> {
  final bool isRo;
  Set<Polygon> _polygons = HashSet<Polygon>();
  String jSonLocation = 'assets/en-gals.json';
  List<Gal> _gals = List.empty(growable: true);
  final Set<Marker> _markers = {};
  double lat = 46.948958;
  double lon = 27.508986;

  late UserLocation _currentLocation;

  Future<UserLocation> getLocation() async {
    try {
      var userLocation = await Geolocator.getCurrentPosition();
      lat = userLocation.latitude;
      lon = userLocation.longitude;
    } catch (e) {
      print("Could not get the location");
    }
    return _currentLocation;
  }

  _MenuScreenState({required this.isRo});

  @override
  void initState() {
    super.initState();
    getLocation();
    setState(() {
      if (!isRo) {}
      readJson(isRo);
      _setPolygons();
    });
  }

  @override
  Widget build(BuildContext context) {
    List<Marker> markers = [
      const Marker(
        markerId: MarkerId('Codri Pascanilor'),
        position: LatLng(47.280941, 26.615692),
        infoWindow: InfoWindow(title: 'Codrii Pascanilor'),
      ),
      const Marker(
          markerId: MarkerId('Belcesti-Focuri'),
          position: LatLng(47.338233, 27.159748),
          infoWindow: InfoWindow(title: 'Belcesti-Focuri')),
      const Marker(
          markerId: MarkerId('Dealurile bohotinului'),
          position: LatLng(46.947622, 27.986547),
          infoWindow: InfoWindow(title: 'Dealurile bohotinului')),
      const Marker(
          markerId: MarkerId('Rediu-Prajeni'),
          position: LatLng(47.401060, 27.272148),
          infoWindow: InfoWindow(title: 'Rediu-Prajeni')),
      const Marker(
          markerId: MarkerId('Siret-Moldova'),
          position: LatLng(47.346522, 26.827235),
          infoWindow: InfoWindow(title: 'Siret-Moldova')),
      const Marker(
          markerId: MarkerId('Stefan cel Mare'),
          position: LatLng(46.885186, 27.678074),
          infoWindow: InfoWindow(title: 'Stefan cel Mare')),
      const Marker(
          markerId: MarkerId('Stejarii Argintii'),
          position: LatLng(47.119188, 27.271016),
          infoWindow: InfoWindow(title: 'Stejarii Argintii')),
      const Marker(
          markerId: MarkerId('Valea Prutului'),
          position: LatLng(47.503098, 27.363956),
          infoWindow: InfoWindow(title: 'Valea Prutului')),
      const Marker(
          markerId: MarkerId('Colinele Iasului'),
          position: LatLng(46.986224, 27.438754),
          infoWindow: InfoWindow(title: 'Colinele Iasului')),
    ];

    return Scaffold(
      bottomSheet: WillPopScope(
        onWillPop: () async => false,
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: <Widget>[
            Container(
              decoration: BoxDecoration(
                  color: Color.fromARGB(255, 164, 191, 170),
                  borderRadius: BorderRadius.all(Radius.circular(15.0))
              ),
              child: ListTile(
                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(5.0)),
                leading: const Icon(Icons.home, color: Colors.white),
                title: Text(AppLocalizations.of(context).mainMenu, style: TextStyle(color: Colors.white)),
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => ZoneTuristice(galList: _gals),
                    ),
                  );
                },
              ),
            ),
            SizedBox(height: 3.0),
            Container(
              decoration: BoxDecoration(
                  color: Color.fromARGB(255, 164, 191, 170),
                  borderRadius: BorderRadius.all(Radius.circular(15.0))
              ),
              child: ListTile(
                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(5.0)),
                leading: const Icon(Icons.qr_code_scanner_sharp, color: Colors.white),
                title: Text(AppLocalizations.of(context).qrScan, style: TextStyle(color: Colors.white)),
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const QRViewExample(),
                    ),
                  );
                },
              ),
            ),
            SizedBox(height: 3.0),
            Container(
              decoration: BoxDecoration(
                color: Color.fromARGB(255, 164, 191, 170),
                  borderRadius: BorderRadius.all(Radius.circular(15.0))
              ),
              child: ListTile(
                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(5.0)),
                leading: const Icon(Icons.near_me_sharp, color: Colors.white),
                title: Text(AppLocalizations.of(context).nearMe, style: TextStyle(color: Colors.white)),
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) =>
                          ObjectivesScreen(objectives: _gals[0].objectives),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
      body: GoogleMap(
        polygons: Set.of(_polygons),
        markers: markers.toSet(),
        onMapCreated: (mapController) {
          mapController.showMarkerInfoWindow(
              _markers.elementAt(Random().nextInt(_markers.length)).markerId);
        },
        myLocationButtonEnabled: true,
        zoomControlsEnabled: true,
        initialCameraPosition:
            CameraPosition(target: LatLng(47.166523, 27.350635), zoom: 8.1),
      ),
    );
  }

  void _setPolygons() {
    dealurileBohotinuluiPolygons();
    belcestFocuriPolygon();
    codriiPascanilorPoligon();
    rediuPolygons();
    siretPolygons();
    stefanPolygons();
    stejariPolygons();
    prutPolygons();
    iasiPolygons();
  }

  void iasiPolygons() {//-ceas
    List<LatLng> iasi = [
      LatLng(46.891919, 27.147269),
      LatLng(46.875890, 27.186938),
      LatLng(46.881860, 27.198731),
      LatLng(46.870814, 27.221878),
      LatLng(46.877979, 27.250266),
      LatLng(46.873501, 27.262932),
      LatLng(46.874994, 27.292631),
      LatLng(46.861856, 27.307917),
      LatLng(46.869023, 27.328880),
      LatLng(46.869363, 27.329342),
      LatLng(46.880040, 27.328548),
      LatLng(46.886645, 27.359522),
      LatLng(46.886102, 27.367067),
      LatLng(46.890987, 27.387849),
      LatLng(46.891412, 27.387841),
      LatLng(46.875890, 27.408804),
      LatLng(46.878278, 27.437629),
      LatLng(46.870602, 27.442822),
      LatLng(46.875685, 27.466983),
      LatLng(46.865129, 27.476276),
      LatLng(46.867475, 27.485140),
      LatLng(46.879301, 27.485997),
      LatLng(46.879887, 27.516449),
      LatLng(46.887118, 27.531032),
      LatLng(46.918083, 27.521024),
      LatLng(46.919938, 27.529316),
      LatLng(46.874414, 27.562056),
      LatLng(46.887216, 27.566059),
      LatLng(46.886752, 27.582852),
      LatLng(46.889010, 27.591062),
      LatLng(46.892363, 27.605981),
      LatLng(46.893594, 27.618196),
      LatLng(46.892773, 27.621901),
      LatLng(46.893663, 27.624804),
      LatLng(46.897317, 27.627745),
      LatLng(46.902534, 27.640585),
      LatLng(46.907631, 27.638329),
      LatLng(46.910651, 27.639684),
      LatLng(46.922584, 27.629202),
      LatLng(46.923777, 27.613479),
      LatLng(46.939882, 27.618720),
      LatLng(46.957174, 27.606055),
      LatLng(46.959623, 27.612047),
      LatLng(46.965180, 27.614584),
      LatLng(46.966808, 27.614470),
      LatLng(46.969030, 27.616856),
      LatLng(46.977350, 27.619620),
      LatLng(46.982439, 27.624619),
      LatLng(46.983886, 27.627837),
      LatLng(46.985824, 27.628633),
      LatLng(46.989657, 27.628765), //pct comun stefan
      LatLng(46.996145, 27.635815),
      LatLng(46.996384, 27.640715),
      LatLng(46.999248, 27.645089),
      LatLng(47.001277, 27.652964),
      LatLng(46.998771, 27.661364),
      LatLng(47.001277, 27.667314),
      LatLng(47.007483, 27.663464),
      LatLng(47.009153, 27.659964),
      LatLng(47.017267, 27.656289),
      LatLng(47.024664, 27.655239),
      LatLng(47.031940, 27.644214),
      LatLng(47.037546, 27.644914),
      LatLng(47.042078, 27.653664),
      LatLng(47.049709, 27.655589),
      LatLng(47.054479, 27.658914),
      LatLng(47.055671, 27.666264),
      LatLng(47.065763, 27.664804), //pct com stefan
      LatLng(47.083332, 27.650279),
      LatLng(47.090293, 27.654975),
      LatLng(47.094160, 27.651491),
      LatLng(47.101102, 27.648740),
      LatLng(47.111361, 27.634051),
      LatLng(47.118106, 27.631648),
      LatLng(47.126486, 27.617180),
      LatLng(47.136207, 27.606252), //pct stejari1
      LatLng(47.139147, 27.588303),
      LatLng(47.137705, 27.574670),
      LatLng(47.110497, 27.566491),
      LatLng(47.113590, 27.550133),
      LatLng(47.111528, 27.540439),
      LatLng(47.093581, 27.536807), //pct stejari2
      LatLng(47.090288, 27.507722),
      LatLng(47.083069, 27.503481),
      LatLng(47.096269, 27.495604),
      LatLng(47.094619, 27.472278),
      LatLng(47.101837, 27.445923),
      LatLng(47.096302, 27.410200), //pct stejari
      LatLng(47.086796, 27.401583),
      LatLng(47.071324, 27.405824),
      LatLng(47.065547, 27.393404),
      LatLng(47.065547, 27.380681),
      LatLng(47.061626, 27.365534),
      LatLng(47.080402, 27.346146),
      LatLng(47.056466, 27.335846),
      LatLng(47.032314, 27.297070),
      LatLng(47.027565, 27.252842),
      LatLng(47.012818, 27.238152), //pct stejari
      LatLng(47.003193, 27.245874),
      LatLng(47.001024, 27.241785),
      LatLng(46.995032, 27.239513),
      LatLng(46.993142, 27.222609),
      LatLng(46.990955, 27.220616),
      LatLng(46.989772, 27.214550),
      LatLng(46.991428, 27.213597),
      LatLng(46.991309, 27.211603),
      LatLng(46.989181, 27.210564),
      LatLng(46.989063, 27.203891),
      LatLng(46.990127, 27.203197),
      LatLng(46.990009, 27.198778),
      LatLng(46.998580, 27.192278),
      LatLng(47.000412, 27.183439),
      LatLng(46.989950, 27.179712),
      LatLng(46.987467, 27.174383),
      LatLng(46.980372, 27.170656),
      LatLng(46.972538, 27.150118),
      LatLng(46.963422, 27.150534),
      LatLng(46.961304, 27.149032),
      LatLng(46.963969, 27.130309),
      LatLng(46.952762, 27.121098),
      LatLng(46.940842, 27.094062),
      LatLng(46.891919, 27.147269),
    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("iasi"),
          points: iasi,
          fillColor: Colors.blueGrey.withOpacity(0.5),
          strokeWidth: 1,
          consumeTapEvents: true,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    ZoneScreen(gal: getGal("Colinele Iasului")),
              ),
            );
          }),
    );
  }

  void prutPolygons() {
    List<LatLng> prut = [
      LatLng(47.210251, 27.567399), //punct comun stefan
      LatLng(47.246797, 27.555171),
      LatLng(47.268413, 27.555346),
      LatLng(47.263545, 27.566721),
      LatLng(47.265801, 27.575646),
      LatLng(47.287290, 27.578226),
      LatLng(47.283119, 27.603352),
      LatLng(47.274415, 27.610836),
      LatLng(47.303691, 27.659410), //punct comun stefan-> granitaModova
      LatLng(47.306674, 27.645776),
      LatLng(47.312920, 27.637455),
      LatLng(47.326417, 27.622003),
      LatLng(47.327594, 27.609735),
      LatLng(47.331864, 27.603960),
      LatLng(47.339573, 27.615509),
      LatLng(47.341945, 27.612710),
      LatLng(47.350008, 27.605710),
      LatLng(47.367315, 27.600985),
      LatLng(47.372767, 27.595035),
      LatLng(47.378811, 27.581560),
      LatLng(47.399781, 27.582435),
      LatLng(47.409612, 27.584010),
      LatLng(47.411033, 27.580685),
      LatLng(47.419678, 27.574560),
      LatLng(47.424769, 27.559160),
      LatLng(47.434003, 27.553210),
      LatLng(47.436489, 27.559160),
      LatLng(47.440750, 27.560910),
      LatLng(47.446076, 27.557410),
      LatLng(47.447851, 27.565635),
      LatLng(47.457555, 27.574210),
      LatLng(47.466073, 27.569660),
      LatLng(47.470923, 27.556185),
      LatLng(47.487718, 27.539910),
      LatLng(47.488428, 27.533610),
      LatLng(47.483461, 27.531860),
      LatLng(47.482751, 27.522410),
      LatLng(47.483106, 27.513310),
      LatLng(47.489255, 27.515935),
      LatLng(47.490083, 27.512610),
      LatLng(47.485117, 27.507535),
      LatLng(47.488664, 27.494760),
      LatLng(47.485590, 27.477436),
      LatLng(47.490911, 27.471836),
      LatLng(47.500370, 27.467461),
      LatLng(47.513491, 27.456961),
      LatLng(47.525192, 27.466411),
      LatLng(47.527791, 27.465536),
      LatLng(47.537362, 27.456261),
      LatLng(47.550592, 27.438236),
      LatLng(47.564055, 27.431411),
      LatLng(47.585070, 27.424411),
      LatLng(47.583417, 27.402886),
      LatLng(47.592270, 27.386086),
      LatLng(47.602182, 27.374186),
      LatLng(47.619997, 27.360887),
      LatLng(47.627074, 27.334287),
      LatLng(47.639456, 27.321862),
      LatLng(47.643347, 27.314687),
      LatLng(47.650421, 27.315212),
      LatLng(47.662090, 27.305587),
      LatLng(47.683183, 27.280037),
      LatLng(47.693197, 27.278462),
      LatLng(47.701559, 27.281787),
      LatLng(47.700499, 27.271112),
      LatLng(47.707683, 27.269187),
      LatLng(47.714395, 27.265687),
      LatLng(47.721812, 27.255712),
      LatLng(47.726639, 27.269362),
      LatLng(47.723343, 27.290537),
      LatLng(47.729464, 27.294562),
      LatLng(47.747941, 27.298237),
      LatLng(47.753236, 27.292112),
      LatLng(47.756295, 27.285987),
      LatLng(47.764882, 27.278112),
      LatLng(47.779584, 27.266212),
      LatLng(47.794164, 27.249762),
      LatLng(47.817201, 27.239263),
      LatLng(47.831183, 27.247663),
      LatLng(47.837174, 27.246263),
      LatLng(47.837997, 27.212488),
      LatLng(47.860456, 27.174758),
      LatLng(47.859371, 27.166266),
      LatLng(47.853130, 27.160605),
      LatLng(47.847133, 27.132896),
      LatLng(47.836304, 27.163436),
      LatLng(47.831147, 27.155348),
      LatLng(47.824360, 27.168692),
      LatLng(47.817843, 27.151709),
      LatLng(47.805352, 27.154135),
      LatLng(47.796660, 27.146452),
      LatLng(47.786608, 27.146048),
      LatLng(47.768537, 27.142611),
      LatLng(47.762150, 27.147665),
      LatLng(47.755626, 27.151709),
      LatLng(47.742825, 27.157474),
      LatLng(47.731500, 27.140901),
      LatLng(47.718554, 27.172175),
      LatLng(47.701827, 27.175383),
      LatLng(47.675556, 27.181531),
      LatLng(47.660436, 27.214408),
      LatLng(47.659716, 27.237931),
      LatLng(47.659896, 27.272145),
      LatLng(47.659716, 27.282837),
      LatLng(47.654314, 27.286044),
      LatLng(47.649633, 27.279095),
      LatLng(47.640629, 27.252632),
      LatLng(47.630759, 27.256201),
      LatLng(47.628470, 27.274405),
      LatLng(47.621111, 27.279662),
      LatLng(47.616477, 27.298667),
      LatLng(47.604755, 27.274809),
      LatLng(47.594666, 27.294624),
      LatLng(47.570922, 27.289479),
      LatLng(47.569367, 27.282954),
      LatLng(47.572228, 27.265232),
      LatLng(47.562417, 27.249328),
      LatLng(47.556693, 27.246753),
      LatLng(47.536552, 27.259628),
      LatLng(47.520545, 27.216398),
      LatLng(47.522015, 27.213648),
      LatLng(47.519833, 27.206379), //punct comun cu rediu
      LatLng(47.517431, 27.211524),
      LatLng(47.510576, 27.206624),
      LatLng(47.499700, 27.203124),
      LatLng(47.496981, 27.210999),
      LatLng(47.491778, 27.209249),
      LatLng(47.484091, 27.210649),
      LatLng(47.477587, 27.225174),
      LatLng(47.473802, 27.241274),
      LatLng(47.467769, 27.253174),
      LatLng(47.465521, 27.272773),
      LatLng(47.459960, 27.285373),
      LatLng(47.454162, 27.296223),
      LatLng(47.448719, 27.303223),
      LatLng(47.437120, 27.306023),
      LatLng(47.432267, 27.304448),
      LatLng(47.420309, 27.325973),
      LatLng(47.416875, 27.332273),
      LatLng(47.414507, 27.352398),
      LatLng(47.408822, 27.359398),
      LatLng(47.395082, 27.360973),
      LatLng(47.385604, 27.355723),
      LatLng(47.373281, 27.364998),
      LatLng(47.366169, 27.391247),
      LatLng(47.356331, 27.381098),
      LatLng(47.348980, 27.388972),
      LatLng(47.337478, 27.375673),
      LatLng(47.331192, 27.391947),
      LatLng(47.315533, 27.390372),
      LatLng(47.307940, 27.402097),
      LatLng(47.271499, 27.428172),
      LatLng(47.267580, 27.443222),
      LatLng(47.256060, 27.460722),
      LatLng(47.246676, 27.480322),
      LatLng(47.238479, 27.486797),
      LatLng(47.226120, 27.503947),
      LatLng(47.210251, 27.567399),
    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("prut"),
          points: prut,
          fillColor: Colors.blueAccent.withOpacity(0.5),
          strokeWidth: 1,
          consumeTapEvents: true,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    ZoneScreen(gal: getGal("Valuea Prutului")),
              ),
            );
          }),
    );
  }

  void stejariPolygons() {
    List<LatLng> stejari = [
      LatLng(47.012818, 27.238152), //pct iasi
      LatLng(47.012818, 27.238152),
      LatLng(47.027565, 27.252842),
      LatLng(47.032314, 27.297070),
      LatLng(47.056466, 27.335846),
      LatLng(47.080402, 27.346146),
      LatLng(47.061626, 27.365534),
      LatLng(47.065547, 27.380681),
      LatLng(47.065547, 27.393404),
      LatLng(47.071324, 27.405824),
      LatLng(47.086796, 27.401583),
      LatLng(47.096302, 27.410200),
      LatLng(47.101837, 27.445923),
      LatLng(47.094619, 27.472278),
      LatLng(47.096269, 27.495604),
      LatLng(47.083069, 27.503481),
      LatLng(47.090288, 27.507722),
      LatLng(47.093581, 27.536807),
      LatLng(47.111528, 27.540439),
      LatLng(47.113590, 27.550133),
      LatLng(47.110497, 27.566491),
      LatLng(47.137705, 27.574670),
      LatLng(47.139147, 27.588303),
      LatLng(47.136207, 27.606252), //pct iasi
      LatLng(47.144149, 27.581367),
      LatLng(47.151895, 27.567034),
      LatLng(47.150862, 27.564024),
      LatLng(47.159298, 27.553774),
      LatLng(47.162952, 27.551000),
      LatLng(47.172025, 27.528295),
      LatLng(47.182990, 27.498520), //pct rediu
      LatLng(47.186179, 27.488420),
      LatLng(47.192720, 27.477745),
      LatLng(47.204016, 27.434170),
      LatLng(47.213243, 27.387243),
      LatLng(47.234847, 27.369197),
      LatLng(47.238793, 27.349316),
      LatLng(47.254251, 27.333976), //rediu + belcesti
      LatLng(47.245227, 27.334454),
      LatLng(47.236959, 27.318040),
      LatLng(47.218622, 27.320688),
      LatLng(47.181568, 27.331277),
      LatLng(47.170411, 27.300038),
      LatLng(47.186202, 27.295618),
      LatLng(47.173070, 27.256080),
      LatLng(47.184601, 27.243660),
      LatLng(47.183529, 27.214596),
      LatLng(47.156990, 27.191148),
      LatLng(47.138468, 27.183939),
      LatLng(47.119395, 27.177531),
      LatLng(47.104131, 27.193550),
      LatLng(47.088863, 27.187944),
      LatLng(47.066226, 27.168720),
      LatLng(47.062679, 27.182337),
      LatLng(47.050674, 27.185541),
      LatLng(47.042760, 27.179133),
      LatLng(47.029931, 27.186342),
      LatLng(47.027747, 27.207568),
      LatLng(47.017645, 27.217981),
      LatLng(47.012818, 27.238152),
    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("stejari"),
          points: stejari,
          fillColor: Colors.green.withOpacity(0.4),
          strokeWidth: 1,
          consumeTapEvents: true,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    ZoneScreen(gal: getGal("Stejarii-Argintii")),
              ),
            );
          }),
    );
  }

  void stefanPolygons() {
    List<LatLng> stefan = [ //ceas
      LatLng(46.886102, 27.367067),
      LatLng(46.890987, 27.387849),
      LatLng(46.891412, 27.387841), //comun iasi
      LatLng(46.875890, 27.408804),
      LatLng(46.878278, 27.437629),
      LatLng(46.870602, 27.442822),
      LatLng(46.875685, 27.466983),
      LatLng(46.865129, 27.476276),
      LatLng(46.867475, 27.485140),
      LatLng(46.879301, 27.485997),
      LatLng(46.879887, 27.516449),
      LatLng(46.887118, 27.531032),
      LatLng(46.918083, 27.521024),
      LatLng(46.919938, 27.529316),
      LatLng(46.874414, 27.562056),
      LatLng(46.887216, 27.566059),
      LatLng(46.886752, 27.582852),
      LatLng(46.889010, 27.591062),
      LatLng(46.892363, 27.605981),
      LatLng(46.893594, 27.618196),
      LatLng(46.892773, 27.621901),
      LatLng(46.893663, 27.624804),
      LatLng(46.897317, 27.627745),
      LatLng(46.902534, 27.640585),
      LatLng(46.907631, 27.638329),
      LatLng(46.910651, 27.639684),
      LatLng(46.922584, 27.629202),
      LatLng(46.923777, 27.613479),
      LatLng(46.939882, 27.618720),
      LatLng(46.957174, 27.606055),
      LatLng(46.959623, 27.612047),
      LatLng(46.965180, 27.614584),
      LatLng(46.966808, 27.614470),
      LatLng(46.969030, 27.616856),
      LatLng(46.977350, 27.619620),
      LatLng(46.982439, 27.624619),
      LatLng(46.983886, 27.627837),
      LatLng(46.985824, 27.628633),
      LatLng(46.989657, 27.628765), //pct conum coline
      LatLng(46.996145, 27.635815),
      LatLng(46.996384, 27.640715),
      LatLng(46.999248, 27.645089),
      LatLng(47.001277, 27.652964),
      LatLng(46.998771, 27.661364),
      LatLng(47.001277, 27.667314),
      LatLng(47.007483, 27.663464),
      LatLng(47.009153, 27.659964),
      LatLng(47.017267, 27.656289),
      LatLng(47.024664, 27.655239),
      LatLng(47.031940, 27.644214),
      LatLng(47.037546, 27.644914),
      LatLng(47.042078, 27.653664),
      LatLng(47.049709, 27.655589),
      LatLng(47.054479, 27.658914),
      LatLng(47.055671, 27.666264),
      LatLng(47.065763, 27.664804),//pct com coline
      LatLng(47.063430, 27.672640),
      LatLng(47.058374, 27.696118),
      LatLng(47.042687, 27.709144),
      LatLng(47.038821, 27.709805),
      LatLng(47.019151, 27.702657),
      LatLng(46.999475, 27.702922),
      LatLng(46.983764, 27.704775),
      LatLng(46.968411, 27.722513),
      LatLng(46.958474, 27.740780),
      LatLng(46.947089, 27.744221),
      LatLng(46.936606, 27.757193),
      LatLng(46.933841, 27.768642),
      LatLng(46.933274, 27.773147),
      LatLng(46.929323, 27.792337),
      LatLng(46.927211, 27.795717),
      LatLng(46.928502, 27.802477),
      LatLng(46.922907, 27.816673),
      LatLng(46.923618, 27.817660),
      LatLng(46.923757, 27.818787),
      LatLng(46.926007, 27.819553),
      LatLng(46.928555, 27.817847),
      LatLng(46.933498, 27.818803),
      LatLng(46.937250, 27.822891),
      LatLng(46.941564, 27.823716),
      LatLng(46.945508, 27.822873),
      LatLng(46.950782, 27.818728),
      LatLng(46.952228, 27.815672),
      LatLng(46.960906, 27.810027),
      LatLng(46.965756, 27.810402),
      LatLng(46.968060, 27.808846),
      LatLng(46.972909, 27.803895),
      LatLng(46.975827, 27.803014),
      LatLng(46.982569, 27.801120),
      LatLng(46.986125, 27.798139),
      LatLng(46.992314, 27.798208),
      LatLng(46.995878, 27.801919),
      LatLng(47.002386, 27.801919),
      LatLng(47.014119, 27.790478),
      LatLng(47.020256, 27.788625),
      LatLng(47.030091, 27.777639),
      LatLng(47.045878, 27.756989),
      LatLng(47.046691, 27.776647),
      LatLng(47.049269, 27.772564),
      LatLng(47.050789, 27.771176),
      LatLng(47.052309, 27.776283),
      LatLng(47.053357, 27.778911),
      LatLng(47.055620, 27.782134),
      LatLng(47.056228, 27.786001),
      LatLng(47.061463, 27.780448),
      LatLng(47.066153, 27.778033),
      LatLng(47.070838, 27.765655),
      LatLng(47.072489, 27.758384),
      LatLng(47.071354, 27.751038),
      LatLng(47.076099, 27.746949),
      LatLng(47.096004, 27.747176),
      LatLng(47.105352, 27.745408),
      LatLng(47.111217, 27.735049),
      LatLng(47.120617, 27.707260),
      LatLng(47.124801, 27.703987),
      LatLng(47.125880, 27.700764),
      LatLng(47.130760, 27.698101),
      LatLng(47.148486, 27.686498),
      LatLng(47.148876, 27.703225),
      LatLng(47.162354, 27.721328),
      LatLng(47.176919, 27.727056),
      LatLng(47.195762, 27.722130),
      LatLng(47.199421, 27.724650),
      LatLng(47.201015, 27.717283),
      LatLng(47.210493, 27.714596),
      LatLng(47.223855, 27.700037),
      LatLng(47.224208, 27.697091),
      LatLng(47.235742, 27.691978),
      LatLng(47.236860, 27.689031),
      LatLng(47.236978, 27.680192),
      LatLng(47.236154, 27.674472),
      LatLng(47.234036, 27.659567),
      LatLng(47.237390, 27.646134),
      LatLng(47.238502, 27.623091),
      LatLng(47.237210, 27.611277),
      LatLng(47.212867, 27.600663),
      LatLng(47.225380, 27.589249),
      LatLng(47.210251, 27.567399), //punct comun prut
      LatLng(47.246797, 27.555171),
      LatLng(47.268413, 27.555346),
      LatLng(47.263545, 27.566721),
      LatLng(47.265801, 27.575646),
      LatLng(47.287290, 27.578226),
      LatLng(47.283119, 27.603352),
      LatLng(47.274415, 27.610836),
      LatLng(47.303691, 27.659410), //pct comun prut
      LatLng(47.309898, 27.679949),
      LatLng(47.298412, 27.680246),
      LatLng(47.293172, 27.691538),
      LatLng(47.300428, 27.706693),
      LatLng(47.295792, 27.726900),
      LatLng(47.286319, 27.738192),
      LatLng(47.277853, 27.747404),
      LatLng(47.271401, 27.747701),
      LatLng(47.263133, 27.747998),
      LatLng(47.258697, 27.758993),
      LatLng(47.252646, 27.756616),
      LatLng(47.247805, 27.756913),
      LatLng(47.240341, 27.758696),
      LatLng(47.236911, 27.758102),
      LatLng(47.231665, 27.764342),
      LatLng(47.231867, 27.774743),
      LatLng(47.226822, 27.775337),
      LatLng(47.221373, 27.779200),
      LatLng(47.219153, 27.786035),
      LatLng(47.213905, 27.785738),
      LatLng(47.209061, 27.786926),
      LatLng(47.207647, 27.791086),
      LatLng(47.190687, 27.786926),
      LatLng(47.188466, 27.795544),
      LatLng(47.191495, 27.800001),
      LatLng(47.189476, 27.804161),
      LatLng(47.172510, 27.796138),
      LatLng(47.168874, 27.800001),
      LatLng(47.166624, 27.811418),
      LatLng(47.152851, 27.803108),
      LatLng(47.143314, 27.800511),
      LatLng(47.139289, 27.828765),
      LatLng(47.136186, 27.841126),
      LatLng(47.127176, 27.852457),
      LatLng(47.123171, 27.844364),
      LatLng(47.127976, 27.842598),
      LatLng(47.127776, 27.837889),
      LatLng(47.122670, 27.826705),
      LatLng(47.116061, 27.833916),
      LatLng(47.112556, 27.858049),
      LatLng(47.109251, 27.854959),
      LatLng(47.104443, 27.858785),
      LatLng(47.104644, 27.863494),
      LatLng(47.107648, 27.863347),
      LatLng(47.107648, 27.876297),
      LatLng(47.103942, 27.872029),
      LatLng(47.099234, 27.884243),
      LatLng(47.092723, 27.879387),
      LatLng(47.090118, 27.882919),
      LatLng(47.091320, 27.888805),
      LatLng(47.085409, 27.896163),
      LatLng(47.074586, 27.896751),
      LatLng(47.073584, 27.900136),
      LatLng(47.077492, 27.906022),
      LatLng(47.069876, 27.914557),
      LatLng(47.068272, 27.919855),
      LatLng(47.062759, 27.932952),
      LatLng(47.066468, 27.938985),
      LatLng(47.060954, 27.945018),
      LatLng(47.057847, 27.959292),
      LatLng(47.053736, 27.956938),
      LatLng(47.053736, 27.956938),
      LatLng(47.054238, 27.952229),
      LatLng(47.051230, 27.945018),
      LatLng(47.047319, 27.952376),
      LatLng(47.049926, 27.963854),
      LatLng(47.047720, 27.964590),
      LatLng(47.046116, 27.958851),
      LatLng(47.043709, 27.958704),
      LatLng(47.043509, 27.961205),
      LatLng(47.044512, 27.974891),
      LatLng(47.039899, 27.976510),
      LatLng(47.035085, 27.986369),
      LatLng(47.038896, 27.990048),
      LatLng(47.034985, 27.996228),
      LatLng(47.029869, 27.994463),
      LatLng(47.023817, 28.014500), //punct comun cu dealBo
      LatLng(47.015890, 27.991332),
      LatLng(47.015890, 27.974097),
      LatLng(47.017909, 27.959378),
      LatLng(47.008316, 27.949284),
      LatLng(47.000390, 27.934603),
      LatLng(46.991837, 27.930321),
      LatLng(46.983491, 27.911663),
      LatLng(46.978274, 27.904628),
      LatLng(46.969091, 27.890252),
      LatLng(46.958748, 27.877354), //punct comun cu dealBo
      LatLng(46.950037, 27.863131),
      LatLng(46.940560, 27.876087),
      LatLng(46.928870, 27.877475),
      LatLng(46.917809, 27.875162),
      LatLng(46.901688, 27.887192),
      LatLng(46.884613, 27.885341),
      LatLng(46.871645, 27.877475),
      LatLng(46.846506, 27.888904),
      LatLng(46.854172, 27.871255),
      LatLng(46.854925, 27.865448),
      LatLng(46.860745, 27.861644),
      LatLng(46.861498, 27.853133),
      LatLng(46.864989, 27.845624),
      LatLng(46.865126, 27.829604),
      LatLng(46.863675, 27.823494),
      LatLng(46.866438, 27.819804),
      LatLng(46.868971, 27.820304),
      LatLng(46.871640, 27.810893),
      LatLng(46.865959, 27.808289),
      LatLng(46.855758, 27.795674),
      LatLng(46.858189, 27.789720),
      LatLng(46.856636, 27.778587),
      LatLng(46.857671, 27.769272),
      LatLng(46.859329, 27.762380),
      LatLng(46.857620, 27.755564),
      LatLng(46.856325, 27.748900),
      LatLng(46.854046, 27.743598),
      LatLng(46.853114, 27.733677),
      LatLng(46.843790, 27.734056),
      LatLng(46.841149, 27.720196),
      LatLng(46.836382, 27.708836),
      LatLng(46.829129, 27.701263),
      LatLng(46.820216, 27.696265),
      LatLng(46.808533, 27.690031),
      LatLng(46.808878, 27.679207),
      LatLng(46.817429, 27.670416),
      LatLng(46.816004, 27.658385),
      LatLng(46.822811, 27.649131),
      LatLng(46.821070, 27.637100),
      LatLng(46.815687, 27.622756),
      LatLng(46.816320, 27.610031),
      LatLng(46.815529, 27.596381),
      LatLng(46.820120, 27.580418),
      LatLng(46.827877, 27.572552),
      LatLng(46.839275, 27.553265),
      LatLng(46.840511, 27.541803),
      LatLng(46.837062, 27.529430),
      LatLng(46.833614, 27.517170),
      LatLng(46.829381, 27.511900),
      LatLng(46.827264, 27.500902),
      LatLng(46.824207, 27.486466),
      LatLng(46.826245, 27.477185),
      LatLng(46.824678, 27.470082),
      LatLng(46.822718, 27.464354),
      LatLng(46.820287, 27.461833),
      LatLng(46.824991, 27.448658),
      LatLng(46.821307, 27.443502),
      LatLng(46.820601, 27.436284),
      LatLng(46.828127, 27.431816),
      LatLng(46.824834, 27.396528),
      LatLng(46.826402, 27.383925),
      LatLng(46.833692, 27.371437),
      LatLng(46.841138, 27.372239),
      LatLng(46.842391, 27.368688),
      LatLng(46.851795, 27.369604),
      LatLng(46.870048, 27.358491),
      LatLng(46.878898, 27.372583),

    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("stefan"),
          points: stefan,
          fillColor: Colors.brown.withOpacity(0.5),
          strokeWidth: 1,
          consumeTapEvents: true,
          onTap: () {
            // LatLng(47.034784, 27.985045),
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    ZoneScreen(gal: getGal("Stefan cel Mare")),
              ),
            );
          }),
    );
  }

  void siretPolygons() {
    List<LatLng> siretMoldova = [
      //+ceas
      LatLng(47.351768, 26.616604),
      LatLng(47.351768, 26.616604),
      LatLng(47.354743, 26.619690),
      LatLng(47.355963, 26.634316),
      LatLng(47.359688, 26.640618),
      LatLng(47.360076, 26.646919),
      LatLng(47.359067, 26.655913),
      LatLng(47.357631, 26.664677),
      LatLng(47.357321, 26.675275),
      LatLng(47.363025, 26.676593),
      LatLng(47.366769, 26.663961),
      LatLng(47.369931, 26.664534),
      LatLng(47.369931, 26.664534),
      LatLng(47.372781, 26.677579),
      LatLng(47.376221, 26.678956),
      LatLng(47.379306, 26.675842),
      LatLng(47.379994, 26.669943),
      LatLng(47.383944, 26.670795),
      LatLng(47.386807, 26.666927),
      LatLng(47.393175, 26.656734),
      LatLng(47.398522, 26.644542),
      LatLng(47.401140, 26.646213),
      LatLng(47.405199, 26.665813),
      LatLng(47.410190, 26.671680),
      LatLng(47.415205, 26.678717), //coum belcesti
      LatLng(47.414268, 26.682064),
      LatLng(47.412678, 26.682695),
      LatLng(47.413105, 26.683840),
      LatLng(47.411516, 26.685272),
      LatLng(47.409500, 26.685788),
      LatLng(47.408957, 26.690600),
      LatLng(47.405157, 26.687678),
      LatLng(47.404266, 26.687621),
      LatLng(47.402637, 26.689970),
      LatLng(47.401823, 26.693636),
      LatLng(47.399225, 26.693751),
      LatLng(47.399070, 26.695985),
      LatLng(47.397868, 26.696157),
      LatLng(47.397054, 26.695240),
      LatLng(47.396394, 26.696959),
      LatLng(47.395658, 26.703489),
      LatLng(47.393059, 26.704176),
      LatLng(47.392090, 26.707442),
      LatLng(47.389375, 26.710421),
      LatLng(47.386273, 26.711051),
      LatLng(47.386622, 26.712483),
      LatLng(47.384178, 26.710478),
      LatLng(47.383170, 26.711566),
      LatLng(47.380648, 26.713457),
      LatLng(47.378437, 26.715347),
      LatLng(47.379019, 26.718211),
      LatLng(47.374985, 26.719529),
      LatLng(47.374830, 26.717925),
      LatLng(47.372580, 26.721362),
      LatLng(47.372269, 26.725773),
      LatLng(47.369631, 26.726059),
      LatLng(47.367187, 26.724054),
      LatLng(47.365868, 26.725658),
      LatLng(47.368396, 26.727727),
      LatLng(47.362119, 26.737849),
      LatLng(47.361943, 26.742658),
      LatLng(47.362795, 26.747295),
      LatLng(47.361474, 26.747858),
      LatLng(47.358803, 26.753101),
      LatLng(47.358920, 26.755831),
      LatLng(47.359507, 26.756524),
      LatLng(47.358861, 26.762980),
      LatLng(47.363352, 26.761117),
      LatLng(47.364702, 26.761551),
      LatLng(47.364732, 26.763500),
      LatLng(47.366316, 26.765147),
      LatLng(47.369339, 26.767227),
      LatLng(47.370895, 26.776196),
      LatLng(47.369134, 26.790235),
      LatLng(47.372404, 26.796531),
      LatLng(47.376797, 26.799046),
      LatLng(47.378321, 26.803150),
      LatLng(47.375542, 26.804076),
      LatLng(47.375631, 26.810033),
      LatLng(47.377693, 26.817181),
      LatLng(47.380830, 26.822343),
      LatLng(47.379127, 26.831741),
      LatLng(47.377783, 26.835183),
      LatLng(47.379127, 26.838492),
      LatLng(47.381906, 26.841537),
      LatLng(47.379396, 26.847758),
      LatLng(47.380606, 26.850141),
      LatLng(47.381861, 26.850935),
      LatLng(47.383698, 26.854376),
      LatLng(47.383609, 26.857355),
      LatLng(47.381682, 26.864767),
      LatLng(47.379799, 26.870525),
      LatLng(47.377917, 26.874563),
      LatLng(47.377066, 26.878269),
      LatLng(47.379889, 26.880387),
      LatLng(47.380472, 26.886476),
      LatLng(47.381368, 26.889123),
      LatLng(47.382712, 26.890381),
      LatLng(47.382623, 26.894948),
      LatLng(47.380830, 26.901831),
      LatLng(47.382175, 26.907787),
      LatLng(47.385760, 26.900838),
      LatLng(47.386790, 26.906199),
      LatLng(47.386253, 26.911163),
      LatLng(47.384191, 26.912553),
      LatLng(47.382040, 26.915928),
      LatLng(47.383519, 26.919105),
      LatLng(47.384236, 26.923473),
      LatLng(47.383295, 26.933136),
      LatLng(47.380248, 26.936776),
      LatLng(47.381009, 26.939357),
      LatLng(47.381750, 26.956393),
      LatLng(47.383955, 26.957529),
      LatLng(47.387185, 26.963512),
      LatLng(47.392108, 26.974948),
      LatLng(47.395081, 26.984642),
      LatLng(47.396670, 26.999410),
      LatLng(47.392261, 27.013421),
      LatLng(47.396414, 27.032809),
      LatLng(47.399695, 27.033415),
      LatLng(47.397491, 27.037504),
      LatLng(47.397696, 27.046214),
      LatLng(47.402231, 27.058105),
      LatLng(47.394471, 27.070984),
      LatLng(47.388310, 27.064509),
      LatLng(47.381793, 27.061534),
      LatLng(47.376698, 27.056284),
      LatLng(47.376461, 27.035809),
      LatLng(47.367572, 27.037384),
      LatLng(47.364490, 27.028459),
      LatLng(47.360105, 27.027409),
      LatLng(47.355955, 27.033009),
      LatLng(47.350858, 27.026009),
      LatLng(47.346826, 27.021459),
      LatLng(47.340423, 27.018659),
      LatLng(47.339000, 27.009909),
      LatLng(47.330461, 27.013059),
      LatLng(47.324174, 27.016909),
      LatLng(47.308935, 27.019922), //coum belcesti
      LatLng(47.314596, 26.992390),
      LatLng(47.310518, 26.977120),
      LatLng(47.308636, 26.953522),
      LatLng(47.308949, 26.928535),
      LatLng(47.300791, 26.929924),
      LatLng(47.291691, 26.925296),
      LatLng(47.281961, 26.938252),
      LatLng(47.277880, 26.910027),
      LatLng(47.269717, 26.902624),
      LatLng(47.271915, 26.884115),
      LatLng(47.277252, 26.871622),
      LatLng(47.262495, 26.860517),
      LatLng(47.246478, 26.853576),
      LatLng(47.238310, 26.833679),
      LatLng(47.232969, 26.816096),
      LatLng(47.230548, 26.805135),
      LatLng(47.239682, 26.796085),
      LatLng(47.246682, 26.780503),
      LatLng(47.252670, 26.773285),
      LatLng(47.253759, 26.767098),
      LatLng(47.260524, 26.763089),
      LatLng(47.264800, 26.763661),
      LatLng(47.270631, 26.756214),
      LatLng(47.274751, 26.758620),
      LatLng(47.278314, 26.757173),
      LatLng(47.281192, 26.753386),
      LatLng(47.289000, 26.753916),
      LatLng(47.290798, 26.751720),
      LatLng(47.291928, 26.753613),
      LatLng(47.293255, 26.749135),
      LatLng(47.290983, 26.741406),
      LatLng(47.288110, 26.739685),
      LatLng(47.287122, 26.729493),
      LatLng(47.285686, 26.721551),
      LatLng(47.277963, 26.712550),
      LatLng(47.273383, 26.714800),
      LatLng(47.270688, 26.709902),
      LatLng(47.273922, 26.695739),
      LatLng(47.270239, 26.692959),
      LatLng(47.261077, 26.678663),
      LatLng(47.267350, 26.670929),
      LatLng(47.270725, 26.668963),
      LatLng(47.285715, 26.668500),
      LatLng(47.288697, 26.666765),
      LatLng(47.292071, 26.666996),
      LatLng(47.295288, 26.662022),
      LatLng(47.295366, 26.654850),
      LatLng(47.301328, 26.650570),
      LatLng(47.302797, 26.652777),
      LatLng(47.308263, 26.646362),
      LatLng(47.311996, 26.648809),
      LatLng(47.326718, 26.629998),
      LatLng(47.328895, 26.633057),
      LatLng(47.337394, 26.626175),
      LatLng(47.337705, 26.616387),
      LatLng(47.341228, 26.618528),
      LatLng(47.345477, 26.618375),
      LatLng(47.351280, 26.614246),
      LatLng(47.351768, 26.616604),
    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("siretMoldova"),
          points: siretMoldova,
          fillColor: Colors.orange.withOpacity(0.5),
          strokeWidth: 1,
          consumeTapEvents: true,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => ZoneScreen(gal: getGal("Siret-Moldova")),
              ),
            );
          }),
    );
  }

  void rediuPolygons() {
    List<LatLng> rediuPrajeni = [
      LatLng(47.254251, 27.333976), //belcesti+stejari
      LatLng(47.268471, 27.326572),
      LatLng(47.276564, 27.330243),
      LatLng(47.279677, 27.324126),
      LatLng(47.291504, 27.317702),
      LatLng(47.293163, 27.304856),
      LatLng(47.300009, 27.303938),
      LatLng(47.306024, 27.311891),
      LatLng(47.314734, 27.314644),
      LatLng(47.329870, 27.304244),
      LatLng(47.343136, 27.283140),
      LatLng(47.348731, 27.268458),
      LatLng(47.356399, 27.253776),
      LatLng(47.366136, 27.255000),
      LatLng(47.367172, 27.246741),
      LatLng(47.388712, 27.242459),
      LatLng(47.400722, 27.253471),
      LatLng(47.404862, 27.242765),
      LatLng(47.424405, 27.226946),
      LatLng(47.424183, 27.213200),
      LatLng(47.427570, 27.205992),
      LatLng(47.426351, 27.193977),
      LatLng(47.428790, 27.183764),
      LatLng(47.432312, 27.180760),
      LatLng(47.433395, 27.184966),
      LatLng(47.443283, 27.176355),
      LatLng(47.440168, 27.173151),
      LatLng(47.437594, 27.154328),
      LatLng(47.432041, 27.142513),
      LatLng(47.430280, 27.126693),
      LatLng(47.433260, 27.118283),
      LatLng(47.443283, 27.110473),
      LatLng(47.454387, 27.105467),
      LatLng(47.460615, 27.107269),
      LatLng(47.467926, 27.101262),
      LatLng(47.464812, 27.089247),
      LatLng(47.467589, 27.079803),
      LatLng(47.470062, 27.083000),
      LatLng(47.473175, 27.084302),
      LatLng(47.481296, 27.084202),
      LatLng(47.492324, 27.081598),
      LatLng(47.504906, 27.079295),
      LatLng(47.511264, 27.078795),
      LatLng(47.515649, 27.076713),
      LatLng(47.532549, 27.086312),
      LatLng(47.550257, 27.095924),
      LatLng(47.551382, 27.098632),
      LatLng(47.551412, 27.108900),
      LatLng(47.546007, 27.125064),
      LatLng(47.544350, 27.129997),
      LatLng(47.536401, 27.137955),
      LatLng(47.527747, 27.146483),
      LatLng(47.528216, 27.149880),
      LatLng(47.528718, 27.150450),
      LatLng(47.530509, 27.150970),
      LatLng(47.532769, 27.155358),
      LatLng(47.535899, 27.159523),
      LatLng(47.535078, 27.162622),
      LatLng(47.532233, 27.164556),
      LatLng(47.532183, 27.164680),
      LatLng(47.530844, 27.166242),
      LatLng(47.528651, 27.167258),
      LatLng(47.524081, 27.169539),
      LatLng(47.523562, 27.177398),
      LatLng(47.522139, 27.181587),
      LatLng(47.520632, 27.188727),
      LatLng(47.519833, 27.206379),
      LatLng(47.517431, 27.211524),
      LatLng(47.510576, 27.206624),
      LatLng(47.499700, 27.203124),
      LatLng(47.496981, 27.210999),
      LatLng(47.491778, 27.209249),
      LatLng(47.484091, 27.210649),
      LatLng(47.477587, 27.225174),
      LatLng(47.473802, 27.241274),
      LatLng(47.467769, 27.253174),
      LatLng(47.465521, 27.272773),
      LatLng(47.459960, 27.285373),
      LatLng(47.454162, 27.296223),
      LatLng(47.448719, 27.303223),
      LatLng(47.437120, 27.306023),
      LatLng(47.432267, 27.304448),
      LatLng(47.420309, 27.325973),
      LatLng(47.416875, 27.332273),
      LatLng(47.414507, 27.352398),
      LatLng(47.408822, 27.359398),
      LatLng(47.395082, 27.360973),
      LatLng(47.385604, 27.355723),
      LatLng(47.373281, 27.364998),
      LatLng(47.366169, 27.391247),
      LatLng(47.356331, 27.381098),
      LatLng(47.348980, 27.388972),
      LatLng(47.337478, 27.375673),
      LatLng(47.331192, 27.391947),
      LatLng(47.315533, 27.390372),
      LatLng(47.307940, 27.402097),
      LatLng(47.271499, 27.428172),
      LatLng(47.267580, 27.443222),
      LatLng(47.256060, 27.460722),
      LatLng(47.246676, 27.480322),
      LatLng(47.238479, 27.486797),
      LatLng(47.226120, 27.503947), //prut
      LatLng(47.213046, 27.503247),
      LatLng(47.202465, 27.516896),
      LatLng(47.186293, 27.524946),
      LatLng(47.179577, 27.524507),
      LatLng(47.182990, 27.498520),
      LatLng(47.186179, 27.488420),
      LatLng(47.192720, 27.477745),
      LatLng(47.204016, 27.434170),
      LatLng(47.213243, 27.387243),
      LatLng(47.234847, 27.369197),
      LatLng(47.238793, 27.349316),
      LatLng(47.254251, 27.333976)
    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("rediuPrajeni"),
          points: rediuPrajeni,
          fillColor: Colors.orange.withOpacity(0.5),
          strokeWidth: 1,
          consumeTapEvents: true,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) => ZoneScreen(gal: getGal("Rediu-prajeni")),
              ),
            );
          }),
    );
  }

  void dealurileBohotinuluiPolygons() {
    List<LatLng> dealurileBohotinului = [
      LatLng(46.856110, 27.954457),
      LatLng(46.857956, 27.978310),
      LatLng(46.837333, 27.992111),
      LatLng(46.839492, 27.999131),
      LatLng(46.836701, 28.006273),
      LatLng(46.838595, 28.009625),
      LatLng(46.837099, 28.016766),
      LatLng(46.837199, 28.028718),
      LatLng(46.840290, 28.034985),
      LatLng(46.841984, 28.042855),
      LatLng(46.843879, 28.048539),
      LatLng(46.843081, 28.058741),
      LatLng(46.844975, 28.065008),
      LatLng(46.841187, 28.112230),
      LatLng(46.850159, 28.118934),
      LatLng(46.847368, 28.123598),
      LatLng(46.853049, 28.127533),
      LatLng(46.853348, 28.118060),
      LatLng(46.855242, 28.117331),
      LatLng(46.856239, 28.123452),
      LatLng(46.866403, 28.107129),
      LatLng(46.868496, 28.112084),
      LatLng(46.869791, 28.111501),
      LatLng(46.870389, 28.098967),
      LatLng(46.873378, 28.102756),
      LatLng(46.873179, 28.109315),
      LatLng(46.877164, 28.114416),
      LatLng(46.877961, 28.119080),
      LatLng(46.879655, 28.118497),
      LatLng(46.882046, 28.112521),
      LatLng(46.892505, 28.114125),
      LatLng(46.895990, 28.110044),
      LatLng(46.890712, 28.109606),
      LatLng(46.890114, 28.106983),
      LatLng(46.896588, 28.103048),
      LatLng(46.892505, 28.096052),
      LatLng(46.896986, 28.093429),
      LatLng(46.895692, 28.085121),
      LatLng(46.899376, 28.089494),
      LatLng(46.901966, 28.083372),
      LatLng(46.906845, 28.087162),
      LatLng(46.904555, 28.094886),
      LatLng(46.905451, 28.096344),
      LatLng(46.909234, 28.094157),
      LatLng(46.910628, 28.096635),
      LatLng(46.908936, 28.102028),
      LatLng(46.922575, 28.113250),
      LatLng(46.929045, 28.096198),
      LatLng(46.929940, 28.098967),
      LatLng(46.929542, 28.101736),
      LatLng(46.928149, 28.106400),
      LatLng(46.930737, 28.106546),
      LatLng(46.933623, 28.099696),
      LatLng(46.934220, 28.084392),
      LatLng(46.937205, 28.081478),
      LatLng(46.938499, 28.084247),
      LatLng(46.936011, 28.085850),
      LatLng(46.934817, 28.087890),
      LatLng(46.937405, 28.090951),
      LatLng(46.941186, 28.087599),
      LatLng(46.941584, 28.089202),
      LatLng(46.939395, 28.091971),
      LatLng(46.940091, 28.096052),
      LatLng(46.949046, 28.098676),
      LatLng(46.950837, 28.096344),
      LatLng(46.947256, 28.091825),
      LatLng(46.954717, 28.093574),
      LatLng(46.957403, 28.094012),
      LatLng(46.956607, 28.087307),
      LatLng(46.962974, 28.078417),
      LatLng(46.964565, 28.081623),
      LatLng(46.966032, 28.086688),
      LatLng(46.971663, 28.085036),
      LatLng(46.974536, 28.094045),
      LatLng(46.979074, 28.096570),
      LatLng(46.981831, 28.089246),
      LatLng(46.985047, 28.085709),
      LatLng(46.985564, 28.081079),
      LatLng(46.985392, 28.078385),
      LatLng(46.986598, 28.078637),
      LatLng(46.989814, 28.082931),
      LatLng(46.991308, 28.079395),
      LatLng(47.000036, 28.054389),
      LatLng(47.003851, 28.055998),
      LatLng(47.006359, 28.052319),
      LatLng(47.004152, 28.051583),
      LatLng(47.002145, 28.048934),
      LatLng(47.007363, 28.039811),
      LatLng(47.008968, 28.042901),
      LatLng(47.012681, 28.038192),
      LatLng(47.018300, 28.045402),
      LatLng(47.013785, 28.050994),
      LatLng(47.014286, 28.054232),
      LatLng(47.025322, 28.047757),
      LatLng(47.021209, 28.043931),
      LatLng(47.021710, 28.040399),
      LatLng(47.025121, 28.040252),
      LatLng(47.030538, 28.036132),
      LatLng(47.030237, 28.025831),
      LatLng(47.024921, 28.023035),
      LatLng(47.023316, 28.019356),
      LatLng(47.023817, 28.014500),
      LatLng(47.015890, 27.991332),
      LatLng(47.015890, 27.974097),//pct
      LatLng(47.017909, 27.959378),
      LatLng(47.008316, 27.949284),
      LatLng(47.000390, 27.934603),
      LatLng(46.991837, 27.930321),
      LatLng(46.983491, 27.911663),
      LatLng(46.978274, 27.904628),
      LatLng(46.969091, 27.890252),
      LatLng(46.958748, 27.877354),
      LatLng(46.952973, 27.897278),
      LatLng(46.947761, 27.889180),
      LatLng(46.938915, 27.901905),
      LatLng(46.932912, 27.913473),
      LatLng(46.925013, 27.925272),
      LatLng(46.918060, 27.937071),
      LatLng(46.906049, 27.936840),
      LatLng(46.888026, 27.934295),
      LatLng(46.876325, 27.927123),
      LatLng(46.866835, 27.922727),
      LatLng(46.857249, 27.931301),
      LatLng(46.859029, 27.939911),
      LatLng(46.854510, 27.944117),
    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("dealurileBohotinului"),
          points: dealurileBohotinului,
          fillColor: Colors.purple.withOpacity(0.5),
          strokeWidth: 1,
          consumeTapEvents: true,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    ZoneScreen(gal: getGal("Dealurile Bohotinului")),
              ),
            );
          }),
    );
  }

  void codriiPascanilorPoligon() {
    List<LatLng> codriiPascanilor = [ //-ceas
      LatLng(47.111827, 26.679991),
      LatLng(47.116869, 26.675724),
      LatLng(47.116512, 26.669249),
      LatLng(47.117346, 26.662074),
      LatLng(47.120918, 26.659624),
      LatLng(47.125681, 26.668899),
      LatLng(47.131277, 26.661549),
      LatLng(47.135801, 26.660324),
      LatLng(47.139729, 26.660849),
      LatLng(47.144371, 26.656649),
      LatLng(47.148180, 26.665049),
      LatLng(47.151869, 26.681849),
      LatLng(47.151988, 26.691823),
      LatLng(47.146752, 26.696898),
      LatLng(47.142348, 26.703023),
      LatLng(47.138301, 26.711073),
      LatLng(47.139491, 26.717723),
      LatLng(47.139848, 26.723673),
      LatLng(47.186939, 26.805101),
      LatLng(47.194673, 26.806370),
      LatLng(47.196953, 26.807179),
      LatLng(47.198682, 26.801743),
      LatLng(47.200804, 26.802437),
      LatLng(47.201747, 26.806023),
      LatLng(47.203162, 26.808221),
      LatLng(47.205205, 26.809146),
      LatLng(47.206384, 26.803015),
      LatLng(47.208820, 26.803131),
      LatLng(47.209606, 26.795380),
      LatLng(47.212514, 26.789712),
      LatLng(47.216599, 26.789712),
      LatLng(47.220685, 26.788555),
      LatLng(47.221392, 26.779995),
      LatLng(47.224613, 26.778029),
      LatLng(47.226420, 26.774905),
      LatLng(47.225234, 26.765231),
      LatLng(47.224824, 26.763437),
      LatLng(47.222019, 26.758696),
      LatLng(47.220565, 26.754873),
      LatLng(47.222227, 26.747991),
      LatLng(47.223058, 26.739886),
      LatLng(47.220046, 26.738662),
      LatLng(47.214021, 26.735909),
      LatLng(47.212359, 26.732392),
      LatLng(47.212774, 26.727345),
      LatLng(47.214748, 26.723063),
      LatLng(47.213398, 26.717863),
      LatLng(47.213917, 26.711899),
      LatLng(47.213709, 26.705934),
      LatLng(47.210385, 26.700735),
      LatLng(47.207372, 26.698747),
      LatLng(47.204220, 26.670930),
      LatLng(47.207803, 26.657903),
      LatLng(47.210257, 26.655690),
      LatLng(47.212458, 26.657507),
      LatLng(47.214160, 26.657851),
      LatLng(47.216361, 26.657016),
      LatLng(47.223815, 26.653079),
      LatLng(47.227586, 26.646930),
      LatLng(47.232165, 26.647129),
      LatLng(47.236205, 26.648715),
      LatLng(47.240648, 26.645344),
      LatLng(47.243207, 26.653475),
      LatLng(47.255783, 26.658813), //comun cu siret
      LatLng(47.256595, 26.666187),
      LatLng(47.258322, 26.674747),
      LatLng(47.262562, 26.677986),
      LatLng(47.267350, 26.670929),
      LatLng(47.270725, 26.668963),
      LatLng(47.285715, 26.668500),
      LatLng(47.288697, 26.666765),
      LatLng(47.292071, 26.666996),
      LatLng(47.295288, 26.662022),
      LatLng(47.295366, 26.654850),
      LatLng(47.301328, 26.650570),
      LatLng(47.302797, 26.652777),
      LatLng(47.308263, 26.646362),
      LatLng(47.311996, 26.648809),
      LatLng(47.326718, 26.629998),
      LatLng(47.328895, 26.633057),
      LatLng(47.337394, 26.626175),
      LatLng(47.337705, 26.616387),
      LatLng(47.341228, 26.618528),
      LatLng(47.345477, 26.618375), //comun cu siret
      LatLng(47.351280, 26.614246),
      LatLng(47.351768, 26.616604),
      LatLng(47.354476, 26.616471),
      LatLng(47.355400, 26.610412),
      LatLng(47.368122, 26.602309),
      LatLng(47.369507, 26.599279),
      LatLng(47.369968, 26.594129),
      LatLng(47.373713, 26.590494),
      LatLng(47.379815, 26.592160),
      LatLng(47.388584, 26.584814),
      LatLng(47.389815, 26.572242),
      LatLng(47.389712, 26.557474),
      LatLng(47.393865, 26.552324),
      LatLng(47.396787, 26.552854),
      LatLng(47.399248, 26.550204),
      LatLng(47.400683, 26.544448),
      LatLng(47.401093, 26.535511),
      LatLng(47.399248, 26.528923),
      LatLng(47.398376, 26.515518),
      LatLng(47.394993, 26.510746),
      LatLng(47.394070, 26.497039),
      LatLng(47.387405, 26.494312),
      LatLng(47.384841, 26.497417),
      LatLng(47.364942, 26.507414),
      LatLng(47.351244, 26.502491),
      LatLng(47.339749, 26.510671),
      LatLng(47.339133, 26.513776),
      LatLng(47.337080, 26.515896),
      LatLng(47.333847, 26.515215),
      LatLng(47.333231, 26.519683),
      LatLng(47.334976, 26.522258),
      LatLng(47.326147, 26.532179),
      LatLng(47.328149, 26.541949),
      LatLng(47.312696, 26.555960),
      LatLng(47.307510, 26.574893),
      LatLng(47.290304, 26.578301),
      LatLng(47.289790, 26.566335),
      LatLng(47.284293, 26.549219),
      LatLng(47.284653, 26.541949),
      LatLng(47.278642, 26.529453),
      LatLng(47.283728, 26.525363),
      LatLng(47.272373, 26.512716),
      LatLng(47.269649, 26.505786),
      LatLng(47.261055, 26.518479),
      LatLng(47.252385, 26.532278),
      LatLng(47.248117, 26.534959),
      LatLng(47.247062, 26.539228),
      LatLng(47.244321, 26.545482),
      LatLng(47.239648, 26.555807),
      LatLng(47.236570, 26.562955),
      LatLng(47.224390, 26.570665),
      LatLng(47.214433, 26.585027),
      LatLng(47.210365, 26.590686),
      LatLng(47.207090, 26.595797),
      LatLng(47.205470, 26.594714),
      LatLng(47.201114, 26.596490),
      LatLng(47.203557, 26.601820),
      LatLng(47.203469, 26.604853),
      LatLng(47.202291, 26.607280),
      LatLng(47.199907, 26.607323),
      LatLng(47.195755, 26.608970),
      LatLng(47.193253, 26.613129),
      LatLng(47.179088, 26.619672),
      LatLng(47.171960, 26.622965),
      LatLng(47.160294, 26.619109),
      LatLng(47.140020, 26.629638),
      LatLng(47.123660, 26.635401),
      LatLng(47.105878, 26.630332),
      LatLng(47.095349, 26.634708),
      LatLng(47.093549, 26.640471),
      LatLng(47.099891, 26.653860),
      LatLng(47.107795, 26.667942),
      LatLng(47.111827, 26.679991),
    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("codriiPascanilor"),
          points: codriiPascanilor,
          fillColor: Colors.yellowAccent.withOpacity(0.5),
          consumeTapEvents: true,
          strokeWidth: 1,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    ZoneScreen(gal: getGal("Codrii Pascanilor")),
              ),
            );
          }),
    );
  }

  void belcestFocuriPolygon() {
    List<LatLng> belcestiFocuri = [
      //-ceas
      LatLng(47.415205, 26.678717), // comun cu siret
      LatLng(47.414268, 26.682064),
      LatLng(47.412678, 26.682695),
      LatLng(47.413105, 26.683840),
      LatLng(47.411516, 26.685272),
      LatLng(47.409500, 26.685788),
      LatLng(47.408957, 26.690600),
      LatLng(47.405157, 26.687678),
      LatLng(47.404266, 26.687621),
      LatLng(47.402637, 26.689970),
      LatLng(47.401823, 26.693636),
      LatLng(47.399225, 26.693751),
      LatLng(47.399070, 26.695985),
      LatLng(47.397868, 26.696157),
      LatLng(47.397054, 26.695240),
      LatLng(47.396394, 26.696959),
      LatLng(47.395658, 26.703489),
      LatLng(47.393059, 26.704176),
      LatLng(47.392090, 26.707442),
      LatLng(47.389375, 26.710421),
      LatLng(47.386273, 26.711051),
      LatLng(47.386622, 26.712483),
      LatLng(47.384178, 26.710478),
      LatLng(47.383170, 26.711566),
      LatLng(47.380648, 26.713457),
      LatLng(47.378437, 26.715347),
      LatLng(47.379019, 26.718211),
      LatLng(47.374985, 26.719529),
      LatLng(47.374830, 26.717925),
      LatLng(47.372580, 26.721362),
      LatLng(47.372269, 26.725773),
      LatLng(47.369631, 26.726059),
      LatLng(47.367187, 26.724054),
      LatLng(47.365868, 26.725658),
      LatLng(47.368396, 26.727727), // comun cu siret
      LatLng(47.362119, 26.737849),
      LatLng(47.361943, 26.742658),
      LatLng(47.362795, 26.747295),
      LatLng(47.361474, 26.747858),
      LatLng(47.358803, 26.753101),
      LatLng(47.358920, 26.755831),
      LatLng(47.359507, 26.756524),
      LatLng(47.358861, 26.762980),
      LatLng(47.363352, 26.761117),
      LatLng(47.364702, 26.761551),
      LatLng(47.364732, 26.763500),
      LatLng(47.366316, 26.765147),
      LatLng(47.369339, 26.767227),
      LatLng(47.370895, 26.776196),
      LatLng(47.369134, 26.790235),
      LatLng(47.372404, 26.796531),
      LatLng(47.376797, 26.799046),
      LatLng(47.378321, 26.803150),
      LatLng(47.375542, 26.804076),
      LatLng(47.375631, 26.810033),
      LatLng(47.377693, 26.817181),
      LatLng(47.380830, 26.822343),
      LatLng(47.379127, 26.831741),
      LatLng(47.377783, 26.835183),
      LatLng(47.379127, 26.838492),
      LatLng(47.381906, 26.841537),
      LatLng(47.379396, 26.847758),
      LatLng(47.380606, 26.850141),
      LatLng(47.381861, 26.850935),
      LatLng(47.383698, 26.854376),
      LatLng(47.383609, 26.857355),
      LatLng(47.381682, 26.864767),
      LatLng(47.379799, 26.870525),
      LatLng(47.377917, 26.874563),
      LatLng(47.377066, 26.878269),
      LatLng(47.379889, 26.880387),
      LatLng(47.380472, 26.886476),
      LatLng(47.381368, 26.889123),
      LatLng(47.382712, 26.890381),
      LatLng(47.382623, 26.894948),
      LatLng(47.380830, 26.901831),
      LatLng(47.382175, 26.907787),
      LatLng(47.385760, 26.900838),
      LatLng(47.386790, 26.906199),
      LatLng(47.386253, 26.911163),
      LatLng(47.384191, 26.912553),
      LatLng(47.382040, 26.915928),
      LatLng(47.383519, 26.919105),
      LatLng(47.384236, 26.923473),
      LatLng(47.383295, 26.933136),
      LatLng(47.380248, 26.936776),
      LatLng(47.381009, 26.939357),
      LatLng(47.381750, 26.956393),
      LatLng(47.383955, 26.957529),
      LatLng(47.387185, 26.963512),
      LatLng(47.392108, 26.974948),
      LatLng(47.395081, 26.984642),
      LatLng(47.396670, 26.999410),
      LatLng(47.392261, 27.013421),
      LatLng(47.396414, 27.032809),
      LatLng(47.399695, 27.033415),
      LatLng(47.397491, 27.037504),
      LatLng(47.397696, 27.046214),
      LatLng(47.402231, 27.058105), // comun cu siret
      LatLng(47.394471, 27.070984),
      LatLng(47.388310, 27.064509),
      LatLng(47.381793, 27.061534),
      LatLng(47.376698, 27.056284),
      LatLng(47.376461, 27.035809),
      LatLng(47.367572, 27.037384),
      LatLng(47.364490, 27.028459),
      LatLng(47.360105, 27.027409),
      LatLng(47.355955, 27.033009),
      LatLng(47.350858, 27.026009),
      LatLng(47.346826, 27.021459),
      LatLng(47.340423, 27.018659),
      LatLng(47.339000, 27.009909),
      LatLng(47.330461, 27.013059),
      LatLng(47.324174, 27.016909),
      LatLng(47.308935, 27.019922), // /comun cu siret
      LatLng(47.302304, 27.019379),
      LatLng(47.293602, 27.050920),
      LatLng(47.290348, 27.059837),
      LatLng(47.284862, 27.068733),
      LatLng(47.282119, 27.057815),
      LatLng(47.276633, 27.068328),
      LatLng(47.264560, 27.073585),
      LatLng(47.260169, 27.066711),
      LatLng(47.250288, 27.095421),
      LatLng(47.242053, 27.099869),
      LatLng(47.242968, 27.105975),
      LatLng(47.236592, 27.109615),
      LatLng(47.219285, 27.118341),
      LatLng(47.214571, 27.113978),
      LatLng(47.214099, 27.117845),
      LatLng(47.211809, 27.122407),
      LatLng(47.211607, 27.133216),
      LatLng(47.208980, 27.140256),
      LatLng(47.208441, 27.145116),
      LatLng(47.204601, 27.148090),
      LatLng(47.200491, 27.143331),
      LatLng(47.190788, 27.158899),
      LatLng(47.192270, 27.173080),
      LatLng(47.187688, 27.174667),
      LatLng(47.186542, 27.183294),
      LatLng(47.183644, 27.188847),
      LatLng(47.183577, 27.196185),
      LatLng(47.185666, 27.200945),
      LatLng(47.183529, 27.214596),
      LatLng(47.184698, 27.222490),
      LatLng(47.186127, 27.224936),
      LatLng(47.187731, 27.225709),
      LatLng(47.188548, 27.227812),
      LatLng(47.188518, 27.231030),
      LatLng(47.187556, 27.233906),
      LatLng(47.189189, 27.237425),
      LatLng(47.189393, 27.241544),
      LatLng(47.191552, 27.240085),
      LatLng(47.192601, 27.240343),
      LatLng(47.195488, 27.237167),
      LatLng(47.198696, 27.234678),
      LatLng(47.201379, 27.233476),
      LatLng(47.202953, 27.234249),
      LatLng(47.208691, 27.232500),
      LatLng(47.210914, 27.223972),
      LatLng(47.215630, 27.223873),
      LatLng(47.215023, 27.228434),
      LatLng(47.218930, 27.226154),
      LatLng(47.223442, 27.231112),
      LatLng(47.224048, 27.234880),
      LatLng(47.226540, 27.235475),
      LatLng(47.229234, 27.238351),
      LatLng(47.230379, 27.245491),
      LatLng(47.230850, 27.255308),
      LatLng(47.228695, 27.257787),
      LatLng(47.230581, 27.262547),
      LatLng(47.230109, 27.268695),
      LatLng(47.233072, 27.269786),
      LatLng(47.232466, 27.273158),
      LatLng(47.234419, 27.275042),
      LatLng(47.237987, 27.278017),
      LatLng(47.237314, 27.282082),
      LatLng(47.240882, 27.287140),
      LatLng(47.243777, 27.289520),
      LatLng(47.249970, 27.288429),
      LatLng(47.252461, 27.297850),
      LatLng(47.250576, 27.302510),
      LatLng(47.250240, 27.307667),
      LatLng(47.246605, 27.311237),
      LatLng(47.248288, 27.318773),
      LatLng(47.250913, 27.324922),
      LatLng(47.254251, 27.333976), //rediu+
      LatLng(47.268471, 27.326572),
      LatLng(47.276564, 27.330243),
      LatLng(47.279677, 27.324126),
      LatLng(47.291504, 27.317702),
      LatLng(47.293163, 27.304856),
      LatLng(47.300009, 27.303938),
      LatLng(47.306024, 27.311891),
      LatLng(47.314734, 27.314644),
      LatLng(47.329870, 27.304244),
      LatLng(47.343136, 27.283140),
      LatLng(47.348731, 27.268458),
      LatLng(47.356399, 27.253776),
      LatLng(47.366136, 27.255000),
      LatLng(47.367172, 27.246741),
      LatLng(47.388712, 27.242459),
      LatLng(47.400722, 27.253471),
      LatLng(47.404862, 27.242765),
      LatLng(47.424405, 27.226946), //rediu
      LatLng(47.424183, 27.213200),
      LatLng(47.427570, 27.205992),
      LatLng(47.426351, 27.193977),
      LatLng(47.428790, 27.183764),
      LatLng(47.432312, 27.180760),
      LatLng(47.433395, 27.184966),
      LatLng(47.443283, 27.176355),
      LatLng(47.440168, 27.173151),
      LatLng(47.437594, 27.154328),
      LatLng(47.432041, 27.142513),
      LatLng(47.430280, 27.126693),
      LatLng(47.433260, 27.118283),
      LatLng(47.443283, 27.110473),
      LatLng(47.454387, 27.105467),
      LatLng(47.460615, 27.107269),
      LatLng(47.467926, 27.101262),
      LatLng(47.464812, 27.089247),
      LatLng(47.467589, 27.079803), //rediu
      LatLng(47.466963, 27.053891),
      LatLng(47.453824, 27.064071),
      LatLng(47.450119, 27.048454),
      LatLng(47.443185, 27.043711),
      LatLng(47.439827, 27.035638),
      LatLng(47.433867, 27.033235),
      LatLng(47.427094, 27.033235),
      LatLng(47.422081, 27.028629),
      LatLng(47.417745, 27.026226),
      LatLng(47.418965, 27.013210),
      LatLng(47.416932, 27.010006),
      LatLng(47.422352, 27.003598),
      LatLng(47.423029, 26.997390),
      LatLng(47.412867, 26.962147),
      LatLng(47.415035, 26.955739),
      LatLng(47.412054, 26.932710),
      LatLng(47.408124, 26.927504),
      LatLng(47.410563, 26.911484),
      LatLng(47.406633, 26.894663),
      LatLng(47.409479, 26.889857),
      LatLng(47.404465, 26.872436),
      LatLng(47.405684, 26.862223),
      LatLng(47.404194, 26.847805),
      LatLng(47.404600, 26.825177),
      LatLng(47.408937, 26.813563),
      LatLng(47.411434, 26.805196),
      LatLng(47.413759, 26.791125),
      LatLng(47.415182, 26.784517),
      LatLng(47.417892, 26.779511),
      LatLng(47.418434, 26.772802),
      LatLng(47.422295, 26.774004),
      LatLng(47.425479, 26.766895),
      LatLng(47.430830, 26.757484),
      LatLng(47.433675, 26.750275),
      LatLng(47.437603, 26.745869),
      LatLng(47.444578, 26.742265),
      LatLng(47.446948, 26.737959),
      LatLng(47.446271, 26.732052),
      LatLng(47.449217, 26.720279),
      LatLng(47.454523, 26.719305),
      LatLng(47.457312, 26.714951),
      LatLng(47.457777, 26.704755),
      LatLng(47.460914, 26.704296),
      LatLng(47.464516, 26.704354),
      LatLng(47.466685, 26.701489),
      LatLng(47.468505, 26.698339),
      LatLng(47.469279, 26.692610),
      LatLng(47.471022, 26.682413),
      LatLng(47.468311, 26.678461),
      LatLng(47.464245, 26.676169),
      LatLng(47.462017, 26.672190),
      LatLng(47.448829, 26.668548),
      LatLng(47.440504, 26.670136),
      LatLng(47.434595, 26.672519),
      LatLng(47.423849, 26.672122),
      LatLng(47.415205, 26.678717),
    ];
    _polygons.add(
      Polygon(
          polygonId: PolygonId("belcestiFocuri"),
          points: belcestiFocuri,
          fillColor: Colors.redAccent.withOpacity(0.5),
          strokeWidth: 1,
          consumeTapEvents: true,
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    ZoneScreen(gal: getGal("Belcesti-Focuri")),
              ),
            );
          }),
    );
  }

  Gal getGal(String galName) =>
      _gals.firstWhere((element) => element.name == galName);

  Future<void> readJson(bool isRo) async {
    if (isRo) {
      jSonLocation = 'assets/ro-gals.json';
    }
    final String response = await rootBundle.loadString(jSonLocation);
    final Map<String, dynamic> data = await json.decode(response);
    setState(() {
      _gals = Gals.fromJson(data).gals;
    });
  }

//
// bool roSystemLanguage() {
//   return Platform.localeName.contains("ro");
// }
}
